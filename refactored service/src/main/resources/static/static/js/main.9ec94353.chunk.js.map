{"version":3,"sources":["components/movieTableComponents/AdditionalTasksHeader.js","constants/filterConstants.js","constants/pageActionsConsts.js","components/movieTableComponents/TableHeader.js","components/movieTableComponents/PageFooter.js","constants/movieActionsConsts.js","constants/backendConstants.js","utils/xmlUtils.js","notifications/sendNotification.js","actions/movieActions.js","components/movieTableComponents/TableRow.js","components/movieTableComponents/MovieList.js","constants/coordinatesActionsConsts.js","actions/coordinatesActions.js","components/movieTableComponents/MovieTable.js","components/movieTableComponents/TablePage.js","components/customFormComponents/rendetedInputField.js","constants/enumConstants.js","validators/required.js","constants/personActionsConsts.js","actions/personsActions.js","components/editForms/MovieEditForm.js","components/editPages/MovieEditPage.js","components/createForms/CreateMovieForm.js","components/createPages/CreateMoviePage.js","components/filterForms/IdFilterForm.js","components/filterPages/IdFilterPage.js","components/filterForms/NameFilterForm.js","components/filterPages/NameFilterPage.js","components/filterForms/CoordinateFilterForm.js","components/filterPages/CoordinateFilterPage.js","components/filterForms/DateFilterForm.js","components/filterPages/DateFilterPage.js","components/filterForms/OscarFilterForm.js","components/filterPages/OscarFilterPage.js","components/filterForms/DurationFilterForm.js","components/filterPages/DurationFilterPage.js","components/filterForms/GenreFilterForm.js","components/filterPages/GenreFilterPage.js","components/filterForms/RatingFilterForm.js","components/filterPages/RatingFilterPage.js","components/filterForms/ScreenWriterFilterForm.js","components/filterPages/ScreenWriterFilterPage.js","components/modal/Modal.js","components/editForms/EditCoordinatesForm.js","components/editPages/EditCoordinatesPage.js","components/createForms/CreateCoordinatesForm.js","components/createPages/CreateCoordinatesPage.js","constants/locationActionsConsts.js","actions/locationsActions.js","components/editForms/LocationEditForm.js","components/editPages/LocationEditPage.js","components/createForms/CreateLocationForm.js","components/createPages/CreateLocationPage.js","components/editForms/EditPersonForm.js","components/editPages/EditPersonPage.js","components/createForms/CreatePersonForm.js","components/createPages/CreatePersonPage.js","constants/additionalActionsConsts.js","components/additionalTasks/GenreTaskPage.js","actions/additionalTasksActions.js","components/additionalTasks/DurationTaskPage.js","personTableComponents/PersonTableHeader.js","personTableComponents/PersonTableRow.js","personTableComponents/PersonList.js","personTableComponents/PersonTable.js","components/additionalTasks/ScreenwriterTaskPage.js","components/callerServiceTasks/ReallocateOscarsForm.js","components/callerServiceTasks/ReallocateOscarsPage.js","components/callerServiceTasks/IncreaseOscarsForn.js","components/callerServiceTasks/IncreaseOscarsPage.js","components/App.js","reducer/movieReducer.js","reducer/pageReducer.js","reducer/coordinatesReducer.js","reducer/locationReducer.js","reducer/personReducer.js","reducer/additionalTasksReducer.js","reducer/rootReducer.js","index.js"],"names":["AdditionalTasksHeader","history","useHistory","className","id","onClick","evt","preventDefault","push","ID","NAME","COORDINATE","DATE","OSCAR","DURATION","GENRE","RATING","WRITER","SET_PER_PAGE","SET_CUR_PAGE","SET_CUR_CRITERION","SET_ITEM_COUNT","DELETE_MOVIE","SET_SORT","REMOVE_SORT","SHOW_MODAL","SET_FILTER","REMOVE_FILTER","TableHeader","dispatch","useDispatch","sort","useSelector","state","page","sortBy","filters","currentCriterion","curCriterion","sortHandler","criterion","element","document","getElementById","includes","type","payload","style","color","setActive","value","console","log","name","PageFooter","perPage","currentPage","itemCount","useState","localPerPage","setLocalPerPage","localCurPage","setLocalCurPage","changePage","onChange","event","input","target","onFocus","onBlur","Number","isInteger","contentEditable","SET_MOVIES","SET_EDITED_MOVIE","CALLER","options","compact","textFn","parentElement","keyNo","Object","keys","_parent","length","keyName","nValue","isNaN","bValue","toLowerCase","nativeType","e","options1","fullTagEmptyElement","convert","require","serverException","msg","exception","message","position","autoDismiss","getMovies","curPage","criteria","result","substring","parseSortByParameter","filterBy","filter","from","to","like","xfrom","xto","yfrom","yto","parseFilters","fetch","BASE","method","headers","then","response","ok","text","xml2js","count","movieDTOList","movies","movie","catch","error","errorMessage","exceptionDTO","Notifications","transferFormDataToMovieDTO","form","creationDate","undefined","duration","genre","mpaaRating","oscarsCount","coordinates","screenWriter","screenwriter","location","locations","TableRow","props","movieId","deleteHandler","deleteMovie","x","y","MovieList","listItems","numbers","Array","isArray","map","SET_COORDINATES","SET_EDITED_COORDINATES","getCoordinates","status","coordinatesDTOList","coordinate","MovieTable","movieList","useEffect","deleteItem","TablePage","renderedInputField","label","readonly","meta","touched","warning","placeholder","readOnly","rating","genres","colors","add_genres","required","SET_PERSONS","SET_EDITED_PERSON","getPerson","personDTOList","persons","person","transferFormDataToCoordinatesDTO","weight","eyeColor","reduxForm","keepDirtyOnReinitialize","handleSubmit","submitting","pristine","reset","editedMovie","coordinatesList","personList","locationsList","personsList","getSingleMovie","initialize","onSubmit","Field","component","o","selected","validate","disabled","MovieEditPage","useParams","formData","xml","js2xml","body","window","reload","updateMovie","CreateMoviePage","createMovie","numberField","onSubmitSuccess","IdFilterPage","textField","NameFilterPage","CoordinateFilterPage","dateField","onKeyDown","validDate","moment","isValid","ev","keycode","keyCode","which","ipLength","DateFilterPage","DateFilterForm","OscarFilterPage","DurationFilterPage","values","errors","compare","GenreFilterPage","validateRadioGroupIsNotEmpty","RatingFilterPage","ScreenWriterFilterPage","Modal","active","children","stopPropagation","editedCoordinates","getSingleCoordinates","EditCoordinatesPage","updateCoordinates","CreateCoordinatesPage","createCoordinates","SET_LOCATIONS","SET_EDITED_LOCATION","getLocations","locationDTOList","editedLocation","getSingleLocation","goBack","updateLocation","CreateLocationPage","createLocation","editedPerson","locationList","getSinglePerson","EditPersonPage","updatePerson","CreatePersonPage","createPerson","SET_GENRE_COUNT","SET_GENRE","SET_LENGTH","SET_LENGTH_COUNT","SET_SCREENWRITER","SET_SCREENWRITER_LIST","GenreTaskPage","localGenre","setLocalGenre","genreCount","additional","listen","action","countDTO","DurationTaskPage","durationCount","lengthCount","localDuration","setLocalDuration","url","PersonTableHeader","PersonTableRow","personId","PersonList","screenwriterList","PersonTable","ScreenwriterTaskPage","genre_from","genre_to","ReallocateOscarsPage","reallocateOscarsRequest","IncreaseOscarsPage","oscars","increaseOscarsRequest","createBrowserHistory","Router","App","notifications","modalActive","path","LocationEditPage","exact","initialState","rootReducer","combineReducers","item","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render"],"mappings":"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","file":"static/js/main.9ec94353.chunk.js","sourcesContent":["import '../../css/filter-header.css';\r\nimport '../../css/app.css';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction AdditionalTasksHeader() {\r\n    const history = useHistory();\r\n\r\n    function handleDurationClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/duration\");\r\n    }\r\n\r\n    function handleGenreClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/genre\");\r\n    }\r\n\r\n    function handleScreenwriterClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/screenwriter\");\r\n    }\r\n\r\n    function handleReallocateOscarsClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/reallocate-oscars\");\r\n    }\r\n\r\n    function handleIncreaseOscarsClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/additional/increase-oscars\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-header base\">\r\n            <div className={\"tasks-div\"}>\r\n                <button id=\"new-movie-but\" onClick={handleGenreClick}>\r\n                    GENRE TASK\r\n                </button>\r\n                <button id=\"new-movie-but\" onClick={handleDurationClick}>\r\n                    DURATION TASK\r\n                </button>\r\n                <button id=\"new-movie-but\" onClick={handleScreenwriterClick}>\r\n                    SCREENWRITER TASK\r\n                </button>\r\n                <button id=\"new-movie-but\" onClick={handleReallocateOscarsClick}>\r\n                    REALLOCATE OSCARS\r\n                </button>\r\n                <button id=\"new-movie-but\" onClick={handleIncreaseOscarsClick}>\r\n                    INCREASE OSCARS\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdditionalTasksHeader;\r\n","const ID = \"id\";\r\nconst NAME = \"name\";\r\nconst COORDINATE = \"coordinate\";\r\nconst DATE = \"date\";\r\nconst OSCAR = \"oscar\";\r\nconst DURATION = \"duration\";\r\nconst GENRE = \"genre\";\r\nconst RATING = \"rating\";\r\nconst WRITER = \"screenWriter\";\r\nconst EDIT_COORD = \"editCoord\"\r\nexport {ID, NAME, COORDINATE, DATE, OSCAR, DURATION, GENRE, RATING, WRITER, EDIT_COORD};","export const SET_PER_PAGE = 'SET_PER_PAGE';\r\nexport const SET_CUR_PAGE = 'SET_CUR_PAGE';\r\nexport const SET_CUR_CRITERION = 'SET_CUR_CRITERION';\r\nexport const SET_ITEM_COUNT = 'SET_ITEM_COUNT';\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\r\nexport const SET_SORT = 'SET_SORT';\r\nexport const REMOVE_SORT = 'REMOVE_SORT';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\r\n","import '../../css/table-header.css';\r\nimport '../../css/app.css';\r\nimport {FaFilter, FaSortAmountDown} from 'react-icons/fa';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from '../../constants/filterConstants';\r\nimport {REMOVE_FILTER, REMOVE_SORT, SET_CUR_CRITERION, SET_SORT, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction TableHeader() {\r\n    const dispatch = useDispatch();\r\n    const sort = useSelector(state => state.page.sortBy);\r\n    const filters = useSelector(state => state.page.filters);\r\n    const currentCriterion = useSelector(state => state.page.curCriterion);\r\n\r\n    function sortHandler(criterion) {\r\n        let element = document.getElementById(\"sort-\" + criterion);\r\n        if (!sort.includes(criterion)) {\r\n            dispatch({\r\n                type: SET_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgb(255,255,255)\";\r\n        } else {\r\n            dispatch({\r\n                type: REMOVE_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgba(255,255,255,0.5)\";\r\n        }\r\n    }\r\n\r\n    function setActive(value, criterion) {\r\n        console.log(\"CUR = \" + currentCriterion);\r\n        let element = document.getElementById(\"filter-\" + criterion);\r\n        for (const filter of filters) {\r\n            if (filter.name === criterion) {\r\n                dispatch({\r\n                    type: REMOVE_FILTER,\r\n                    payload: criterion\r\n                });\r\n                element.style.color = \"rgba(255,255,255,0.5)\";\r\n                return;\r\n            }\r\n        }\r\n        if (value) {\r\n            dispatch({\r\n                type: SET_CUR_CRITERION,\r\n                payload: criterion\r\n            });\r\n        }\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n                <FaSortAmountDown color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"sort-id\"\r\n                                  onClick={() => sortHandler(ID)}/>\r\n                <FaFilter color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"filter-id\"\r\n                          onClick={() => setActive(true, ID)}/>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-name\"\r\n                                  onClick={() => sortHandler(NAME)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-name\"\r\n                          onClick={() => setActive(true, NAME)}/>\r\n            </div>\r\n            <div>\r\n                <span>Coordinates</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-coordinate\"\r\n                                  onClick={() => sortHandler(COORDINATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-coordinate\"\r\n                          onClick={() => setActive(true, COORDINATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Creation Date</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-date\"\r\n                                  onClick={() => sortHandler(DATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-date\"\r\n                          onClick={() => setActive(true, DATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Oscars</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-oscar\"\r\n                                  onClick={() => sortHandler(OSCAR)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-oscar\"\r\n                          onClick={() => setActive(true, OSCAR)}/>\r\n            </div>\r\n            <div>\r\n                <span>Duration</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-duration\"\r\n                                  onClick={() => sortHandler(DURATION)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-duration\"\r\n                          onClick={() => setActive(true, DURATION)}/>\r\n            </div>\r\n            <div>\r\n                <span>Genre</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-genre\"\r\n                                  onClick={() => sortHandler(GENRE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-genre\"\r\n                          onClick={() => setActive(true, GENRE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Rating</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-rating\"\r\n                                  onClick={() => sortHandler(RATING)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-rating\"\r\n                          onClick={() => setActive(true, RATING)}/>\r\n            </div>\r\n            <div>\r\n                <span>Screen Writer</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-screenWriter\"\r\n                                  onClick={() => sortHandler(WRITER)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-screenWriter\"\r\n                          onClick={() => setActive(true, WRITER)}/>\r\n            </div>\r\n            <div>\r\n                <span>Action</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableHeader;\r\n","import '../../css/page-footer.css';\r\nimport '../../css/app.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SET_CUR_PAGE, SET_PER_PAGE} from \"../../constants/pageActionsConsts\";\r\nimport {BsPlusCircleFill, IoMdArrowRoundBack, IoMdArrowRoundForward} from \"react-icons/all\";\r\n\r\nfunction PageFooter() {\r\n    const perPage = useSelector(state => state.page.perPage);\r\n    const currentPage = useSelector(state => state.page.currentPage);\r\n    const itemCount = useSelector(state => state.page.itemCount);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [localPerPage, setLocalPerPage] = useState(\"10\");\r\n    const [localCurPage, setLocalCurPage] = useState(\"1\");\r\n\r\n    function handleOnChangePerPage(event) {\r\n        let input = event.target.value;\r\n        setLocalPerPage(input);\r\n    }\r\n\r\n    function handleOnFocusPerPage(event) {\r\n        setLocalPerPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurPerPage(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalPerPage(\"10\")\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: 10\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleOnChangeCurPage(event) {\r\n        let input = event.target.value;\r\n        setLocalCurPage(input);\r\n    }\r\n\r\n    function handleOnFocusCurPage(event) {\r\n        setLocalCurPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurCurPage(event) {\r\n        let input = event.target.value;\r\n        dispatch({\r\n            type: SET_CUR_PAGE,\r\n            payload: input\r\n        });\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalCurPage(\"1\")\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: 1\r\n            });\r\n        }\r\n    }\r\n\r\n    function createHandler() {\r\n        history.push(\"/new\");\r\n    }\r\n\r\n    function changePage(value) {\r\n        if (value > 0 && ((value - 1) * perPage - itemCount) < 0) {\r\n            setLocalCurPage(value);\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"footer base\">\r\n            <button id=\"new-movie-but\" onClick={() => createHandler()}>\r\n                <div className={\"icon-but\"}>\r\n                    <div className={\"icon\"}>\r\n                        <BsPlusCircleFill color={\"#4683de\"}/>\r\n                    </div>\r\n                    ADD MOVIE\r\n                </div>\r\n            </button>\r\n            <div className=\"page-footer\">\r\n                <span>Per Page</span>\r\n                <input id=\"current-num\" value={localPerPage} onChange={handleOnChangePerPage}\r\n                       onFocus={handleOnFocusPerPage} onBlur={handleOnBlurPerPage}/>\r\n                <span>Total</span>\r\n                <input id=\"current-page\" value={itemCount} contentEditable={\"false\"}/>\r\n                <div id={\"left-arrow\"}>\r\n                    <IoMdArrowRoundBack className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                        onClick={() => changePage(currentPage - 1)}/>\r\n                </div>\r\n                <input id=\"current-page\" value={localCurPage} onChange={handleOnChangeCurPage}\r\n                       onFocus={handleOnFocusCurPage} onBlur={handleOnBlurCurPage}/>\r\n                <div id={\"right-arrow\"}>\r\n                    <IoMdArrowRoundForward className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                           onClick={() => changePage(currentPage + 1)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PageFooter;\r\n","export const SET_MOVIES = 'SET_MOVIES';\r\nexport const SET_EDITED_MOVIE = 'SET_EDITED_MOVIE';\r\nexport const SET_SCREENWRITER_EDITED_MOVIE = 'SET_SCREENWRITER_EDITED_MOVIE';\r\n","export const MOVIE_SERVLET = \"movies\"\r\nexport const LOCATION_SERVLET = \"locations\"\r\nexport const COORD_SERVLET = \"coordinates\"\r\nexport const PERSON_SERVLET = \"persons\"\r\nexport const ADDITIONAL_SERVLET = \"additional\"\r\n//export const BASE = \"https://localhost:8081/\"\r\nexport const CALLER = \"https://localhost:8181/oscar\"\r\n//export const HEADER = 'Content-Type': 'application/xml; charset=utf-8'\r\n//export const BASE = \"/soa-lab1/\";\r\nexport const BASE = \"/\";","export function nativeType(value) {\r\n    var nValue = Number(value);\r\n    if (!isNaN(nValue)) {\r\n        return nValue;\r\n    }\r\n    var bValue = value.toLowerCase();\r\n    if (bValue === 'true') {\r\n        return true;\r\n    } else if (bValue === 'false') {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport var removeJsonTextAttribute = function (value, parentElement) {\r\n    try {\r\n        var keyNo = Object.keys(parentElement._parent).length;\r\n        var keyName = Object.keys(parentElement._parent)[keyNo - 1];\r\n        parentElement._parent[keyName] = nativeType(value);\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\nexport let options = {\r\n    compact: true,\r\n    /*trim: true,\r\n    ignoreDeclaration: true,\r\n    ignoreInstruction: true,\r\n    ignoreAttributes: true,\r\n    ignoreComment: true,\r\n    ignoreCdata: true,\r\n    ignoreDoctype: true,*/\r\n    textFn: removeJsonTextAttribute\r\n};\r\n\r\nexport let options1 = {\r\n    compact: true,\r\n    fullTagEmptyElement: true\r\n};\r\n\r\nexport const convert = require('xml-js');","export const serverException = (msg) => {\r\n    let exception = {};\r\n    exception.title = \"Произошла ошибка\";\r\n    exception.message = msg;\r\n    exception.position = \"tr\";\r\n    exception.autoDismiss = 3;\r\n    return exception;\r\n}\r\n","import {history} from '../components/App.js';\r\nimport {DELETE_MOVIE, SET_ITEM_COUNT} from \"../constants/pageActionsConsts\";\r\nimport {SET_EDITED_MOVIE, SET_MOVIES} from \"../constants/movieActionsConsts\";\r\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from \"../constants/filterConstants\";\r\nimport {BASE, MOVIE_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from 'react-notification-system-redux';\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nfunction parseSortByParameter(criteria) {\r\n    if (criteria.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&sortBy=\";\r\n    for (const criterion of criteria) {\r\n        result = result + criterion + \";\";\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nfunction parseFilters(filters) {\r\n    if (filters.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&filterBy=\";\r\n    for (const filter of filters) {\r\n        switch (filter.name) {\r\n            case ID:\r\n                result = result + ID + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case NAME:\r\n                result = result + NAME + \",\" + filter.like + \";\"\r\n                break;\r\n            case OSCAR:\r\n                result = result + OSCAR + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case DURATION:\r\n                result = result + DURATION + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case RATING:\r\n                result = result + RATING + \",\" + filter.like + \";\"\r\n                break;\r\n            case GENRE:\r\n                result = result + GENRE + \",\" + filter.like + \";\"\r\n                break;\r\n            case DATE:\r\n                result = result + DATE + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case WRITER:\r\n                result = result + WRITER + \",\" + filter.like + \";\"\r\n                break;\r\n            case COORDINATE:\r\n                result = result + COORDINATE + \",\" + filter.xfrom + \",\" + filter.xto + \",\" + filter.yfrom + \",\" + filter.yto + \";\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nexport function getMovies(page) {\r\n    let perPage = page.perPage;\r\n    let curPage = page.currentPage;\r\n    let sortBy = parseSortByParameter(page.sortBy);\r\n    let filterBy = parseFilters(page.filters)\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET +\r\n            \"?perPage=\" + perPage + \"\" +\r\n            \"&curPage=\" + curPage +\r\n            sortBy +\r\n            filterBy;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const count = result.movieDTOList.count;\r\n                const movies = result.movieDTOList.movies.movie;\r\n                dispatch({\r\n                    type: SET_MOVIES,\r\n                    payload: movies\r\n                });\r\n                dispatch({\r\n                    type: SET_ITEM_COUNT,\r\n                    payload: count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function deleteMovie(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                else {\r\n                    dispatch({type: DELETE_MOVIE});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nexport function updateMovie(movie) {\r\n    let xml = convert.js2xml(transferFormDataToMovieDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><movieDTOList><movies><movie>\" + xml + \"</movie></movies></movieDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToMovieDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.name = form.name;\r\n    result.creationDate = form.creationDate;\r\n    if (form.duration !== undefined)\r\n        result.duration = form.duration;\r\n    result.genre = form.genre;\r\n    result.mpaaRating = form.mpaaRating;\r\n    result.oscarsCount = form.oscarsCount;\r\n    result.coordinates = {};\r\n    result.coordinates.id = form.coordinates;\r\n    result.screenWriter = {};\r\n    result.screenWriter.id = form.screenwriter;\r\n    result.screenWriter.location = {};\r\n    result.screenWriter.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function createMovie(movie) {\r\n    let xml = convert.js2xml(transferFormDataToMovieDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<movieDTOList><movies><movie>\" + xml + \"</movie></movies></movieDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else {\r\n                    history.push(\"/\");\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSingleMovie(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.movieDTOList.movies.movie;\r\n                dispatch({\r\n                    type: SET_EDITED_MOVIE,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import '../../css/table-row.css';\r\nimport '../../css/app.css';\r\nimport {FaEdit, FaTrashAlt} from 'react-icons/fa';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteMovie} from \"../../actions/movieActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction TableRow(props) {\r\n    const movie = props.movie;\r\n    const movieId = movie.id;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    function deleteHandler(id) {\r\n        dispatch(deleteMovie(id));\r\n    }\r\n\r\n    function editHandler(id) {\r\n        history.push(\"/edit/\" + id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{movieId}</div>\r\n            <div>{movie.name}</div>\r\n            <div>({movie.coordinates.x} ; {movie.coordinates.y})</div>\r\n            <div>{movie.creationDate}</div>\r\n            <div>{movie.oscarsCount}</div>\r\n            <div>{movie.duration}</div>\r\n            <div>{movie.genre.toLowerCase()}</div>\r\n            <div>{movie.mpaaRating}</div>\r\n            <div>{movie.screenWriter === undefined ? \"null\" : movie.screenWriter.name}</div>\r\n            <div className=\"action-div\">\r\n                <div onClick={() => editHandler(movieId)}>\r\n                    <FaEdit color=\"#3DC937FF\" className=\"pointer icon\"/>\r\n                </div>\r\n                <div onClick={() => deleteHandler(movieId)}>\r\n                    <FaTrashAlt className=\"pointer icon\" color=\"#EB6767FF\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import TableRow from \"./TableRow\";\r\n\r\nfunction MovieList(props) {\r\n    const numbers = props.movies;\r\n    let listItems;\r\n    if (numbers === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(numbers)) {\r\n        //const movie = numbers[0];\r\n        listItems = <TableRow movie={numbers} key={numbers.id}/>\r\n    } else {\r\n        listItems = numbers.map((movie) =>\r\n            <TableRow movie={movie} key={movie.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <\r\n            div> {listItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieList;","export const SET_COORDINATES = \"SET_COORDINATES\";\r\nexport const SET_EDITED_COORDINATES = \"SET_EDITED_COORDINATES\";","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\nimport {history} from \"../components/App\";\r\nimport {BASE, COORD_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleCoordinates(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_EDITED_COORDINATES,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getCoordinates() {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const coordinates = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_COORDINATES,\r\n                    payload: coordinates\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    return result;\r\n}\r\n\r\nexport function updateCoordinates(movie, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createCoordinates(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import '../../css/movie-table.css';\r\nimport AdditionalTasksHeader from \"./AdditionalTasksHeader\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport PageFooter from \"./PageFooter\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMovies} from \"../../actions/movieActions\";\r\nimport MovieList from \"./MovieList\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\n\r\nfunction MovieTable() {\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n    const movies = useSelector(state => state.movies.movieList);\r\n\r\n\r\n    useEffect(() => {\r\n        //dispatch(getMovies(page.perPage, page.currentPage));\r\n        dispatch(getMovies(page));\r\n        dispatch(getCoordinates());\r\n    }, [page.currentPage, page.perPage, page.deleteItem, page.sortBy, page.filters]);\r\n\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <AdditionalTasksHeader/>\r\n            <TableHeader/>\r\n            <MovieList movies={movies}/>\r\n            <PageFooter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieTable;","import '../../css/table-layout.css';\r\nimport MovieTable from \"./MovieTable\";\r\n\r\nfunction TablePage() {\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Movie Table</h1>\r\n            <MovieTable/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePage;\r\n","import React from \"react\";\r\n\r\nexport const renderedInputField = ({input, label, readonly, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"input-box\">\r\n        <div className=\"label\">{label}</div>\r\n        <input {...input} placeholder={label} type={type} readOnly={readonly}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)","export const rating = [\"G\", \"PG\", \"PG_13\", \"R\", \"NC_17\"];\r\nexport const genres = [\"\", \"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];\r\nexport const colors = [\"GREEN\", \"RED\", \"YELLOW\", \"ORANGE\"];\r\nexport const add_genres = [\"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];","export const required = value => value ? undefined : 'Required';","export const SET_PERSONS = \"SET_PERSONS\";\r\nexport const SET_EDITED_PERSON = \"SET_EDITED_PERSON\";","import {history} from \"../components/App\";\r\nimport {BASE, PERSON_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSinglePerson(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status);\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.personDTOList.persons.person;\r\n                dispatch({\r\n                    type: SET_EDITED_PERSON,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getPerson() {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const coordinates = result.personDTOList.persons.person;\r\n                dispatch({\r\n                    type: SET_PERSONS,\r\n                    payload: coordinates\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.name = form.name;\r\n    result.weight = form.weight;\r\n    result.eyeColor = form.eyeColor;\r\n    result.location = {};\r\n    result.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function updatePerson(movie, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><persons><person>\" + xml + \"</person></persons></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createPerson(coordinates, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(coordinates), options1);\r\n    console.log(\"XML\" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><persons><person>\" + xml + \"</person></persons></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSingleMovie} from \"../../actions/movieActions\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {genres, rating} from \"../../constants/enumConstants\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst MovieEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n    const name = useSelector(state => state.movies.editedMovie.name);\r\n    const oscarsCount = useSelector(state => state.movies.editedMovie.oscarsCount);\r\n    const duration = useSelector(state => state.movies.editedMovie.duration);\r\n    const creationDate = useSelector(state => state.movies.editedMovie.creationDate);\r\n    const genre = useSelector(state => state.movies.editedMovie.genre);\r\n    const mpaaRating = useSelector(state => state.movies.editedMovie.mpaaRating);\r\n    const coordinates = useSelector(state => state.movies.editedMovie.coordinates);\r\n    //const coordinatesId = useSelector(state => state.movies.editedMovie.coordinates.id);\r\n    const screenwriter = useSelector(state => state.movies.editedMovie.screenWriter);\r\n    // const location = useSelector(state => state.movies.editedMovie.screenWriter.location);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const locationList = useSelector(state => state.location.locationsList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n    const history = useHistory();\r\n    //const selectedCoordinates = useSelector(state => state.form.edit-movie-form.values.coordinates)\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleMovie(id));\r\n        dispatch(getCoordinates());\r\n        //dispatch(getLocations());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    function handleEditCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"coordinates\");\r\n        history.push(\"/coordinates/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/coordinates/new\");\r\n    }\r\n\r\n    function handleEditPersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"screenwriter\");\r\n        history.push(\"/person/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreatePersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/person/new\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            name: name,\r\n            id: movieId,\r\n            oscarsCount: oscarsCount,\r\n            duration: duration,\r\n            creationDate: creationDate,\r\n            genre: genre,\r\n            mpaaRating: mpaaRating,\r\n            coordinates: coordinates.id,\r\n            screenwriter: screenwriter.id,\r\n        });\r\n    }, [id, name, oscarsCount, duration, genre, mpaaRating, coordinates, screenwriter])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Movie</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"oscarsCount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Oscars\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <Field name=\"duration\" type=\"number\"\r\n                       component={renderedInputField} label=\"Duration (minutes)\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"creationDate\" type=\"text\"\r\n                       component={renderedInputField} label=\"Creation date\"\r\n                       readonly=\"readonly\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Genre</div>\r\n                <Field name=\"genre\"\r\n                       component=\"select\" label=\"Genre\">\r\n                    {genres.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div className=\"label\">Rating</div>\r\n                <Field name=\"mpaaRating\"\r\n                       component=\"select\" label=\"Rating\" validate={[required]}>\r\n                    {rating.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditCoordSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreateCoordSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Screenwriter's name</div>\r\n                <Field name=\"screenwriter\" id=\"screenwriter\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditPersonSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreatePersonSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-movie-form',\r\n    keepDirtyOnReinitialize: true\r\n})(MovieEditForm)","import '../../css/table-layout.css';\r\nimport MovieEditForm from \"../editForms/MovieEditForm\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateMovie} from \"../../actions/movieActions\";\r\n\r\n\r\nfunction MovieEditPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateMovie(formData));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Movie (ID: {id})</h2>\r\n            <hr/>\r\n            <MovieEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieEditPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {genres, rating} from \"../../constants/enumConstants\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst CreateMovieForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const genre = useSelector(state => state.movies.editedMovie.genre);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCoordinates());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            genre: genres[0],\r\n            mpaaRating: rating[0],\r\n            coordinates: coordinatesList[0].id,\r\n            screenwriter: personList[0].id\r\n        });\r\n    }, [coordinatesList, personList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Movie</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"oscarsCount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Oscars\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"duration\" type=\"number\"\r\n                       component={renderedInputField} label=\"Duration (minutes)\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Genre</div>\r\n                <Field name=\"genre\"\r\n                       component=\"select\" label=\"Genre\">\r\n                    {genres.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div className=\"label\">Rating</div>\r\n                <Field name=\"mpaaRating\"\r\n                       component=\"select\" label=\"Rating\">\r\n                    {rating.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Screenwriter's name</div>\r\n                <Field name=\"screenwriter\" id=\"screenwriter\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-movie-form',\r\n})(CreateMovieForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createMovie} from \"../../actions/movieActions\";\r\nimport CreateMovieForm from \"../createForms/CreateMovieForm\";\r\n\r\n\r\nfunction CreateMoviePage() {\r\n    /*const history = useHistory();*/\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createMovie(formData));\r\n        /* history.push('/');*/\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Create Movie</h1>\r\n            <CreateMovieForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateMoviePage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with id in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport IdFilterForm from \"../filterForms/IdFilterForm\";\r\n\r\n\r\nfunction IdFilterPage() {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.page.filters);\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-id\");\r\n        for (const filter of filters) {\r\n            if (filter.name === \"id\") {\r\n                dispatch({\r\n                    type: 'REMOVE_FILTER',\r\n                    payload: \"id\"\r\n                });\r\n            }\r\n        }\r\n        let filter = {};\r\n        filter.name = \"id\";\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <IdFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IdFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('name-filter-form'));\r\n\r\n\r\nconst NameFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with title like</h3>\r\n            <div className=\"text-box-container\">\r\n                <Field name=\"like\" type=\"text\"\r\n                       component={textField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'name-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(NameFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\r\nimport {SET_FILTER, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction NameFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-name\");\r\n        let filter = {};\r\n        filter.name = \"name\";\r\n        filter.like = formData.like;\r\n        dispatch({\r\n            type: SET_FILTER,\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <NameFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('coordinate-filter-form'));\r\n\r\n\r\nconst CoordinateFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with x in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"xfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"xto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <h3>Select movies with y in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"yfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"yto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'coordinate-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(CoordinateFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport CoordinateFilterForm from \"../filterForms/CoordinateFilterForm\";\r\nimport {COORDINATE} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction CoordinateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-coordinate\");\r\n        let filter = {};\r\n        filter.name = COORDINATE;\r\n        filter.xfrom = formData.xfrom;\r\n        filter.xto = formData.xto;\r\n        filter.yfrom = formData.yfrom;\r\n        filter.yto = formData.yto;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <CoordinateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CoordinateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\nimport moment from 'moment';\r\n\r\nconst dateField = ({input, label, type, onKeyDown, meta: {touched, error, warning}}) => (\r\n    <div className=\"date-box\">\r\n        <input {...input} placeholder={label} type={type} onKeyDown={onKeyDown}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst validDate = value => {\r\n    if (moment(value, 'DD/MM/YYYY', true).isValid())\r\n        return undefined;\r\n    else\r\n        return \"Date is incorrect\";\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\nconst onKeyDown = (ev) => {\r\n    var keycode;\r\n    if (window.event)\r\n        keycode = window.event.keyCode;\r\n    else if (ev)\r\n        keycode = ev.which;\r\n    let ipLength = ev.target.value.length;\r\n    if (keycode !== 8) {\r\n        if (ipLength === 2 || ipLength === 5) {\r\n            ev.target.value += '/';\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with date in range</h3>\r\n            <div className=\"date-range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown={onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n                <div id=\"date-dash\"> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown={onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DATE} from \"../../constants/filterConstants\";\r\nimport DateFilterForm from \"../filterForms/DateFilterForm\";\r\n\r\n\r\nfunction DateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-date\");\r\n        let filter = {};\r\n        filter.name = DATE;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('oscar-filter-form'));\r\n\r\n\r\nconst OscarFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with oscars in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'oscar-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(OscarFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport OscarFilterForm from \"../filterForms/OscarFilterForm\";\r\nimport {OSCAR} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction OscarFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-oscar\");\r\n        let filter = {};\r\n        filter.name = OSCAR;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <OscarFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OscarFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('duration-filter-form'));\r\n\r\n\r\nconst DurationFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with duration (min) in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'duration-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(DurationFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DURATION} from \"../../constants/filterConstants\";\r\nimport DurationFilterForm from \"../filterForms/DurationFilterForm\";\r\n\r\n\r\nfunction DurationFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-duration\");\r\n        let filter = {};\r\n        filter.name = DURATION;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DurationFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DurationFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('genre-filter-form'));\r\n\r\nconst validateRadioGroupIsNotEmpty = values => {\r\n    let errors = {};\r\n    if (!values.compare) {\r\n        errors.compare = 'Required';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst GenreFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with genre</h3>\r\n            <div className=\"radio-group\">\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"DRAMA\"/>Drama</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"TRAGEDY\"/>Tragedy</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"HORROR\"/>Horror</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"FANTASY\"/>Fantasy</label>\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'genre-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n    validate: validateRadioGroupIsNotEmpty\r\n})(GenreFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {GENRE} from \"../../constants/filterConstants\";\r\nimport GenreFilterForm from \"../filterForms/GenreFilterForm\";\r\n\r\n\r\nfunction GenreFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-genre\");\r\n        let filter = {};\r\n        filter.name = GENRE;\r\n        filter.like = formData.compare;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <GenreFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenreFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('rating-filter-form'));\r\n\r\nconst validateRadioGroupIsNotEmpty = values => {\r\n    let errors = {};\r\n    if (!values.compare) {\r\n        errors.compare = 'Required';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst RatingFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with rating</h3>\r\n            <div className=\"radio-group\">\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"G\"/>G</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"PG\"/>PG</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"PG_13\"/>PG_13</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"R\"/>R</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"NC_17\"/>NC_17</label>\r\n                {props.errors && <span className=\"error\">{props.errors}</span>}\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'rating-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n    validateRadioGroupIsNotEmpty\r\n})(RatingFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {RATING} from \"../../constants/filterConstants\";\r\nimport RatingFilterForm from \"../filterForms/RatingFilterForm\";\r\n\r\n\r\nfunction RatingFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-rating\");\r\n        let filter = {};\r\n        filter.name = RATING;\r\n        filter.like = formData.compare;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <RatingFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RatingFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('screenWriter-filter-form'));\r\n\r\n\r\nconst ScreenWriterFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with screenwriter name like</h3>\r\n            <div className=\"text-box-container\">\r\n                <Field name=\"like\" type=\"text\"\r\n                       component={textField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'screenWriter-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(ScreenWriterFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport ScreenWriterFilterForm from \"../filterForms/ScreenWriterFilterForm\";\r\nimport {WRITER} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction ScreenWriterFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-screenWriter\");\r\n        let filter = {};\r\n        filter.name = WRITER;\r\n        filter.like = formData.like;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <ScreenWriterFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenWriterFilterPage;\r\n","import React from \"react\";\r\nimport \"../../css/modal.css\";\r\n\r\nconst Modal = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? \"modal active\" : \"modal\"}\r\n             onClick={() => setActive(false)}>\r\n            <div className={active ? \"modal-content active\" : \"modal-content\"}\r\n                 onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {getSingleCoordinates} from \"../../actions/coordinatesActions\";\r\n\r\nconst EditCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const coordinates = useSelector(state => state.coordinates.editedCoordinates);\r\n\r\n    useEffect(() => {\r\n        //dispatch(getSingleMovie(id));\r\n        dispatch(getSingleCoordinates(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: coordinates.id,\r\n            x: coordinates.x,\r\n            y: coordinates.y\r\n        });\r\n    }, [coordinates])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateCoordinates(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Coordinates (ID: {id})</h2>\r\n            <hr/>\r\n            <EditCoordinatesForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst CreateCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(CreateCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCoordinates} from \"../../actions/coordinatesActions\";\r\nimport CreateCoordinatesForm from \"../createForms/CreateCoordinatesForm\";\r\n\r\n\r\nfunction CreateCoordinatesPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createCoordinates(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Coordinates</h2>\r\n            <hr/>\r\n            <CreateCoordinatesForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCoordinatesPage;\r\n","export const SET_LOCATIONS = \"SET_LOCATIONS\"\r\nexport const SET_EDITED_LOCATION = \"SET_EDITED_LOCATION\"","import {history} from \"../components/App\";\r\nimport {BASE, LOCATION_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleLocation(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_EDITED_LOCATION,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getLocations() {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const locations = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_LOCATIONS,\r\n                    payload: locations\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    result.name = form.name;\r\n    return result;\r\n}\r\n\r\nexport function updateLocation(movie, id) {\r\n    console.log(movie);\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createLocation(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.push(\"/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {getSingleLocation} from \"../../actions/locationsActions\";\r\n\r\nconst LocationEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const location = useSelector(state => state.location.editedLocation);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleLocation(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: location.id,\r\n            x: location.x,\r\n            y: location.y,\r\n            name: location.name\r\n        });\r\n    }, [location])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-location-form',\r\n    keepDirtyOnReinitialize: true\r\n})(LocationEditForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateLocation} from \"../../actions/locationsActions\";\r\nimport LocationEditForm from \"../editForms/LocationEditForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateLocation(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Location (ID: {id})</h2>\r\n            <hr/>\r\n            <LocationEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst LocationCreateForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-location-form',\r\n})(LocationCreateForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createLocation} from \"../../actions/locationsActions\";\r\nimport LocationCreateForm from \"../createForms/CreateLocationForm\";\r\n\r\n\r\nfunction CreateLocationPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createLocation(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Location</h2>\r\n            <hr/>\r\n            <LocationCreateForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateLocationPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getSinglePerson} from \"../../actions/personsActions\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst EditPersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const person = useSelector(state => state.person.editedPerson);\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getSinglePerson(id));\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: person.id,\r\n            name: person.name,\r\n            weight: person.weight,\r\n            eyeColor: person.eyeColor,\r\n            locations: person.location.id\r\n        });\r\n    }, [person, locationList])\r\n\r\n    function handleEditLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"locations\");\r\n        history.push(\"/location/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/location/new\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Location name</div>\r\n\r\n                <div className={\"buttons-div\"}>\r\n                    <Field name=\"locations\" id=\"locations\"\r\n                           component=\"select\" label=\"Coordinates\">\r\n                        {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                    </Field>\r\n                    <button id={\"location-form-but\"} onClick={handleEditLocationSubmit}>Edit</button>\r\n                    <button id={\"location-form-but\"} onClick={handleCreateLocationSubmit}>Create</button>\r\n                </div>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <Field name=\"weight\" type=\"number\"\r\n                       component={renderedInputField} label=\"Weight (kilo)\"\r\n                    /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-person-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditPersonForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updatePerson} from \"../../actions/personsActions\";\r\nimport EditPersonForm from \"../editForms/EditPersonForm\";\r\n\r\n\r\nfunction EditPersonPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updatePerson(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Person (ID: {id})</h2>\r\n            <hr/>\r\n            <EditPersonForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPersonPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\n\r\nconst CreatePersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n\r\n    useEffect(() => {\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            locations: locationList[0].id,\r\n            eyeColor: colors[0]\r\n        });\r\n    }, [locationList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Location name</div>\r\n                <Field name=\"locations\" id=\"locations\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"weight\" type=\"number\"\r\n                       component={renderedInputField} label=\"Weight (kilo)\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-person-form',\r\n})(CreatePersonForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CreatePersonForm from \"../createForms/CreatePersonForm\";\r\nimport {createPerson} from \"../../actions/personsActions\";\r\n\r\n\r\nfunction CreatePersonPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createPerson(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Person</h2>\r\n            <hr/>\r\n            <CreatePersonForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePersonPage;\r\n","export const SET_GENRE_COUNT = \"SET_GENRE_COUNT\"\r\nexport const SET_GENRE = \"SET_GENRE\"\r\nexport const SET_LENGTH = \"SET_LENGTH\"\r\nexport const SET_LENGTH_COUNT = \"SET_LENGTH_COUNT\"\r\nexport const SET_SCREENWRITER = \"SET_SCREENWRITER\"\r\nexport const SET_SCREENWRITER_LIST = \"SET_SCREENWRITER_LIST\"","import '../../css/table-layout.css';\r\nimport {genres} from \"../../constants/enumConstants\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_GENRE_COUNT} from \"../../constants/additionalActionsConsts\";\r\nimport {getGenreCount} from \"../../actions/additionalTasksActions\";\r\n\r\nfunction GenreTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [localGenre, setLocalGenre] = useState(\"\");\r\n    const genreCount = useSelector(state => state.additional.genreCount);\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_GENRE_COUNT,\r\n                    payload: \"\"\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"/\");\r\n        dispatch({\r\n            type: SET_GENRE_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    function handleOnChangeGenre(event) {\r\n        let input = event.target.value;\r\n        setLocalGenre(input);\r\n        if (input !== \"\")\r\n            dispatch(getGenreCount(input));\r\n        else\r\n            dispatch({\r\n                type: SET_GENRE_COUNT,\r\n                payload: \"\"\r\n            });\r\n    }\r\n\r\n    function handleOnFocusGenre(event) {\r\n        setLocalGenre(\"\");\r\n        dispatch({\r\n            type: SET_GENRE_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Genre task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>How many movies exist with GENRE equals to</div>\r\n                <select className={\"add-select\"} value={localGenre}\r\n                        onChange={handleOnChangeGenre}\r\n                        onFocus={handleOnFocusGenre}>\r\n                    {genres.map(o => <option key={o} value={o}>{o}</option>)}\r\n                </select>\r\n            </div>\r\n            {genreCount !== \"\" &&\r\n            <div className={\"answer\"}> Answer: {genreCount}</div>\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenreTaskPage;\r\n","import {ADDITIONAL_SERVLET, BASE, CALLER} from \"../constants/backendConstants\";\r\nimport {convert, options} from \"../utils/xmlUtils\";\r\nimport {SET_GENRE_COUNT, SET_LENGTH_COUNT, SET_SCREENWRITER_LIST} from \"../constants/additionalActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\nimport {history} from \"../components/App\";\r\n\r\nexport function getGenreCount(genre) {\r\n    console.log(\"GENRE = \" + genre);\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?genre=\" + genre;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_GENRE_COUNT,\r\n                    payload: result.countDTO.count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getLengthCount(length) {\r\n    console.log(\"LENGTH = \" + length);\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?length=\" + length;\r\n        console.log(url);\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_LENGTH_COUNT,\r\n                    payload: result.countDTO.count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getScreenWriterList(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?screenwriter=\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_SCREENWRITER_LIST,\r\n                    payload: result.personDTOList.persons.person\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n// /genres/redistribute-rewards/{from-genre}/{to-genre}\r\nexport function reallocateOscarsRequest(formData) {\r\n    return (dispatch) => {\r\n        const url = CALLER + \"/genres/redistribute-rewards/\" + formData.genre_from + \"/\" + formData.genre_to;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {},\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                history.push(\"/\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                if (error.status === 404) {\r\n                    dispatch(Notifications.error(serverException(\"Проверьте правильность ввдеенных параметров\")));\r\n                }else{\r\n                    error.text().then(errorMessage => {\r\n                        console.log(errorMessage);\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n// /movies/honor-by-length/{min-length}/{oscars-to-add}\r\nexport function increaseOscarsRequest(formData) {\r\n    return (dispatch) => {\r\n        const url = CALLER + \"/movies/honor-by-length/\" + formData.duration + \"/\" + formData.oscars;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {},\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                history.push(\"/\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                if (error.status === 404) {\r\n                    dispatch(Notifications.error(serverException(\"Проверьте правильность ввдеенных параметров\")));\r\n                }else{\r\n                    error.text().then(errorMessage => {\r\n                        console.log(errorMessage);\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n                }\r\n            });\r\n    }\r\n}","import '../../css/table-layout.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_LENGTH_COUNT} from \"../../constants/additionalActionsConsts\";\r\nimport {getLengthCount} from \"../../actions/additionalTasksActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction DurationTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const durationCount = useSelector(state => state.additional.lengthCount);\r\n    const [localDuration, setLocalDuration] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_LENGTH_COUNT,\r\n                    payload: \"\"\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function handleOnChangeDuration(event) {\r\n        let input = event.target.value;\r\n        setLocalDuration(input);\r\n    }\r\n\r\n    function handleOnFocusDuration(event) {\r\n        setLocalDuration(\"\");\r\n        dispatch({\r\n            type: SET_LENGTH_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    function handleOnBlurDuration(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0) {\r\n            dispatch(getLengthCount(input));\r\n        } else {\r\n            setLocalDuration(\"\")\r\n        }\r\n    }\r\n\r\n    function redirectOnMain() {\r\n        dispatch({\r\n            type: SET_LENGTH_COUNT,\r\n            payload: \"\"\r\n        });\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Duration task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>How many movies exist with DURATION greater than</div>\r\n                <input type={\"number\"} className={\"add-input\"} value={localDuration}\r\n                       onChange={handleOnChangeDuration}\r\n                       onFocus={handleOnFocusDuration}\r\n                       onBlur={handleOnBlurDuration}/>\r\n            </div>\r\n            {durationCount !== \"\" &&\r\n            <div className={\"answer\"}> Answer: {durationCount}</div>\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DurationTaskPage;\r\n","import '../css/table-header.css';\r\nimport '../css/app.css';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction PersonTableHeader() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n            </div>\r\n            <div>\r\n                <span>Weight</span>\r\n            </div>\r\n            <div>\r\n                <span>Eye Color</span>\r\n            </div>\r\n            <div>\r\n                <span>Location</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableHeader;\r\n","import \"../css/table-row.css\"\r\nimport '../css/app.css';\r\n\r\nfunction PersonTableRow(props) {\r\n    const person = props.person;\r\n    const personId = person.id;\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{personId}</div>\r\n            <div>{person.name}</div>\r\n            <div>{person.weight}</div>\r\n            <div>{person.eyeColor}</div>\r\n            <div>{person.location.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableRow;\r\n","import PersonTableRow from \"./PersonTableRow\";\r\n\r\nfunction PersonList(props) {\r\n    const screenwriterList = props.screenwriterList;\r\n    // console.log(\"SCREENWRITER LIST = \" + screenwriterList)\r\n    let listItems;\r\n    if (screenwriterList === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(screenwriterList)) {\r\n        console.log(\"NOT ARRAY\")\r\n        listItems = <PersonTableRow person={screenwriterList} key={screenwriterList.id}/>\r\n    } else {\r\n        listItems = screenwriterList.map((person) =>\r\n            <PersonTableRow person={person} key={person.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <div>{listItems}</div>\r\n    );\r\n}\r\n\r\nexport default PersonList;","import '../css/movie-table.css';\r\nimport PersonTableHeader from \"./PersonTableHeader\";\r\nimport PersonList from \"./PersonList\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction PersonTable() {\r\n    const screenwriterList = useSelector(state => state.additional.screenwriterList);\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <PersonTableHeader/>\r\n            <PersonList screenwriterList={screenwriterList}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTable;","import '../../css/table-layout.css';\r\nimport React, {useEffect} from \"react\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_SCREENWRITER_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getScreenWriterList} from \"../../actions/additionalTasksActions\";\r\nimport PersonTable from \"../../personTableComponents/PersonTable\";\r\n\r\nfunction ScreenwriterTaskPage() {\r\n    const dispatch = useDispatch();\r\n    const personList = useSelector(state => state.person.personsList);\r\n    const screenwriterList = useSelector(state => state.additional.screenwriterList);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_SCREENWRITER_LIST,\r\n                    payload: []\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"/\");\r\n        dispatch({\r\n            type: SET_SCREENWRITER_LIST,\r\n            payload: []\r\n        });\r\n    }\r\n\r\n    function handleOnChangeScreenwriter(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\")\r\n            dispatch(getScreenWriterList(input));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Screenwriter task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>List all movies with SCREENWRITER less than</div>\r\n                <select className={\"add-select\"}\r\n                        onChange={handleOnChangeScreenwriter}>\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </select>\r\n            </div>\r\n            {(!Array.isArray(screenwriterList) || screenwriterList.length > 0) &&\r\n            < PersonTable/>\r\n            }\r\n\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenwriterTaskPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {add_genres} from \"../../constants/enumConstants\";\r\n\r\n\r\nconst ReallocateOscarsForm = (props) => {\r\n\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            genre_from: add_genres[0],\r\n            genre_to: add_genres[0]\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Равномерно перераспределить все \"Оскары\", полученные фильмами одного жанра, между фильмами другого\r\n                    жанра</h3>\r\n                <div className=\"label\">У кого будем отнимать оскары</div>\r\n                <Field name=\"genre_from\"\r\n                       component=\"select\" label=\"Genre\">\r\n                    {add_genres.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div className=\"label\">Кому будем отдавать</div>\r\n                <Field name=\"genre_to\"\r\n                       component=\"select\" label=\"Genre\">\r\n                    {add_genres.map(o => <option key={o} value={o} >{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'reallocate-oscars-form',\r\n    keepDirtyOnReinitialize: true\r\n})(ReallocateOscarsForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ReallocateOscarsForm from \"./ReallocateOscarsForm\";\r\nimport {reallocateOscarsRequest} from \"../../actions/additionalTasksActions\";\r\n\r\n\r\nfunction ReallocateOscarsPage() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(reallocateOscarsRequest(formData));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Робин Гуд по-голливудски</h2>\r\n            <hr/>\r\n            <ReallocateOscarsForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReallocateOscarsPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {required} from \"../../validators/required\";\r\n\r\n\r\nconst IncreaseOscarsForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Дополнительно наградить все фильмы с продолжительностью больше заданной указанным числом \"Оскаров\"</h3>\r\n                <Field name=\"duration\" type=\"number\"\r\n                       component={renderedInputField} label=\"Продолжительность\"\r\n                       validate={[required]}\r\n                />\r\n                <Field name=\"oscars\" type=\"number\"\r\n                       component={renderedInputField} label=\"Количество оскаров\"\r\n                       validate={[required]}\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'increase-oscars-form',\r\n    keepDirtyOnReinitialize: true\r\n})(IncreaseOscarsForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport IncreaseOscarsForm from \"./IncreaseOscarsForn\";\r\nimport {increaseOscarsRequest} from \"../../actions/additionalTasksActions\";\r\n\r\n\r\nfunction IncreaseOscarsPage() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(increaseOscarsRequest(formData));\r\n        console.log(\"HELLO\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Больше оскаров богу оскаров!</h2>\r\n            <hr/>\r\n            <IncreaseOscarsForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IncreaseOscarsPage;\r\n","import '../css/app.css';\nimport TablePage from \"./movieTableComponents/TablePage\";\nimport Notifications from 'react-notification-system-redux';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport MovieEditPage from \"./editPages/MovieEditPage\";\nimport CreateMoviePage from \"./createPages/CreateMoviePage\";\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from \"../constants/filterConstants\";\nimport IdFilterPage from \"./filterPages/IdFilterPage\";\nimport NameFilterPage from \"./filterPages/NameFilterPage\";\nimport CoordinateFilterPage from \"./filterPages/CoordinateFilterPage\";\nimport DateFilterPage from \"./filterPages/DateFilterPage\";\nimport OscarFilterPage from \"./filterPages/OscarFilterPage\";\nimport DurationFilterPage from \"./filterPages/DurationFilterPage\";\nimport GenreFilterPage from \"./filterPages/GenreFilterPage\";\nimport RatingFilterPage from \"./filterPages/RatingFilterPage\";\nimport ScreenWriterFilterPage from \"./filterPages/ScreenWriterFilterPage\";\nimport Modal from \"./modal/Modal\";\nimport EditCoordinatesPage from \"./editPages/EditCoordinatesPage\";\nimport CreateCoordinatesPage from \"./createPages/CreateCoordinatesPage\";\nimport LocationEditPage from \"./editPages/LocationEditPage\";\nimport CreateLocationPage from \"./createPages/CreateLocationPage\";\nimport EditPersonPage from \"./editPages/EditPersonPage\";\nimport CreatePersonPage from \"./createPages/CreatePersonPage\";\nimport GenreTaskPage from \"./additionalTasks/GenreTaskPage\";\nimport DurationTaskPage from \"./additionalTasks/DurationTaskPage\";\nimport ScreenwriterTaskPage from \"./additionalTasks/ScreenwriterTaskPage\";\nimport ReallocateOscarsPage from \"./callerServiceTasks/ReallocateOscarsPage\";\nimport IncreaseOscarsPage from \"./callerServiceTasks/IncreaseOscarsPage\";\n\nexport const history = createBrowserHistory()\n\nclass DebugRouter extends Router {\n    constructor(props){\n        super(props);\n        console.log('initial history is: ', JSON.stringify(this.history, null,2))\n        this.history.listen((location, action)=>{\n            console.log(\n                `The current URL is ${location.pathname}${location.search}${location.hash}`\n            )\n            console.log(`The last navigation action was ${action}`, JSON.stringify(this.history, null,2));\n        });\n    }\n}\n\nfunction App() {\n    const notifications = useSelector(state => state.notifications);\n    const modalActive = useSelector(state => state.page.modalActive);\n    const dispatch = useDispatch();\n    const currentCriterion = useSelector(state => state.page.curCriterion);\n\n    function setActive(value) {\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: value\n        });\n    }\n\n    return (\n        <div className=\"app\">\n            <Modal active={modalActive} setActive={setActive} id=\"modal\">\n                {currentCriterion === ID && <IdFilterPage/>}\n                {currentCriterion === NAME && <NameFilterPage/>}\n                {currentCriterion === COORDINATE && <CoordinateFilterPage/>}\n                {currentCriterion === DATE && <DateFilterPage/>}\n                {currentCriterion === OSCAR && <OscarFilterPage/>}\n                {currentCriterion === DURATION && <DurationFilterPage/>}\n                {currentCriterion === GENRE && <GenreFilterPage/>}\n                {currentCriterion === RATING && <RatingFilterPage/>}\n                {currentCriterion === WRITER && <ScreenWriterFilterPage/>}\n            </Modal>\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/edit/:id\">\n                        <MovieEditPage/>\n                    </Route>\n                    <Route path=\"/coordinates/edit/:id\">\n                        <EditCoordinatesPage/>\n                    </Route>\n                    <Route path=\"/location/edit/:id\">\n                        <LocationEditPage/>\n                    </Route>\n                    <Route path=\"/person/edit/:id\">\n                        <EditPersonPage/>\n                    </Route>\n                    <Route exact path=\"/coordinates/new\">\n                        <CreateCoordinatesPage/>\n                    </Route>\n                    <Route exact path=\"/location/new\">\n                        <CreateLocationPage/>\n                    </Route>\n                    <Route exact path=\"/person/new\">\n                        <CreatePersonPage/>\n                    </Route>\n                    <Route exact path=\"/additional/genre\">\n                        <GenreTaskPage/>\n                    </Route>\n                    <Route exact path=\"/additional/duration\">\n                        <DurationTaskPage/>\n                    </Route>\n                    <Route exact path=\"/additional/screenwriter\">\n                        <ScreenwriterTaskPage/>\n                    </Route>\n                    <Route exact path=\"/additional/reallocate-oscars\">\n                        <ReallocateOscarsPage/>\n                    </Route>\n                    <Route exact path=\"/additional/increase-oscars\">\n                        <IncreaseOscarsPage/>\n                    </Route>\n                    <Route path=\"/new\">\n                        <CreateMoviePage/>\n                    </Route>\n                    <Route exact path=\"/\">\n                        <TablePage/>\n                    </Route>\n                </Switch>\n            </Router>\n            <Notifications notifications={notifications}/>\n        </div>\n    );\n}\n\nexport default App;\n","import {SET_EDITED_MOVIE, SET_MOVIES} from \"../constants/movieActionsConsts\";\r\n\r\nconst initialState = {\r\n    movieList: [],\r\n    editedMovie: {\r\n        coordinates: {id: \"\", x: \"\", y: \"\"},\r\n        screenWriter: {\r\n            id: \"\", eyeColor: \"\", name: \"\", weight: \"\",\r\n            location: {id: \"\", x: \"\", name: \"\", y: \"\"}\r\n        }\r\n    }\r\n};\r\n\r\nexport function movieReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_MOVIES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                movieList: action.payload\r\n            };\r\n        case SET_EDITED_MOVIE:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedMovie: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    DELETE_MOVIE,\r\n    REMOVE_FILTER,\r\n    REMOVE_SORT,\r\n    SET_CUR_CRITERION,\r\n    SET_CUR_PAGE,\r\n    SET_FILTER,\r\n    SET_ITEM_COUNT,\r\n    SET_PER_PAGE,\r\n    SET_SORT,\r\n    SHOW_MODAL\r\n} from \"../constants/pageActionsConsts\";\r\n\r\nconst initialState = {\r\n    perPage: 10,\r\n    currentPage: 1,\r\n    itemCount: \"\",\r\n    deleteItem: 0,\r\n    sortBy: [],\r\n    modalActive: false,\r\n    filters: [],\r\n    curCriterion: \"\",\r\n};\r\n\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PER_PAGE:\r\n            return {\r\n                ...state,\r\n                perPage: action.payload\r\n            };\r\n        case SET_CUR_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            };\r\n        case SET_CUR_CRITERION:\r\n            return {\r\n                ...state,\r\n                curCriterion: action.payload\r\n            };\r\n        case SET_ITEM_COUNT:\r\n            return {\r\n                ...state,\r\n                itemCount: action.payload\r\n            };\r\n        case DELETE_MOVIE:\r\n            return {\r\n                ...state,\r\n                deleteItem: state.deleteItem + 1\r\n            };\r\n        case SET_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: [...state.sortBy, action.payload]\r\n            };\r\n        case REMOVE_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: state.sortBy.filter(item => item !== action.payload)\r\n            };\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalActive: action.payload\r\n            };\r\n        case SET_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: [...state.filters, action.payload]\r\n            };\r\n        case REMOVE_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: state.filters.filter(item => item.name !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\n\r\nconst initialState = {\r\n    coordinatesList: [],\r\n    editedCoordinates: {id: \"\", x: \"\", y: \"\"}\r\n};\r\n\r\nexport function coordinatesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                coordinatesList: action.payload\r\n            };\r\n        case SET_EDITED_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedCoordinates: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\n\r\nconst initialState = {\r\n    locationsList: [{id: \"\", x: \"\", y: \"\", name: \"\"}],\r\n    editedLocation: {id: \"\", x: \"\", y: \"\", name: \"\"}\r\n};\r\n\r\nexport function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOCATIONS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                locationsList: action.payload\r\n            };\r\n        case SET_EDITED_LOCATION:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedLocation: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\n\r\nconst initialState = {\r\n    personsList: [{id: \"\", name: \"\", weight: \"\", eyeColor: \"\", location: {}}, {\r\n        id: \"\",\r\n        name: \"\",\r\n        weight: \"\",\r\n        eyeColor: \"\",\r\n        location: {}\r\n    }],\r\n    editedPerson: {id: \"\", name: \"\", weight: \"\", eyeColor: \"\", location: {}}\r\n};\r\n\r\nexport function personReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PERSONS:\r\n            return {\r\n                ...state,\r\n                personsList: action.payload\r\n            };\r\n        case SET_EDITED_PERSON:\r\n            return {\r\n                ...state,\r\n                editedPerson: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    SET_GENRE,\r\n    SET_GENRE_COUNT,\r\n    SET_LENGTH,\r\n    SET_LENGTH_COUNT,\r\n    SET_SCREENWRITER,\r\n    SET_SCREENWRITER_LIST\r\n} from \"../constants/additionalActionsConsts\";\r\n\r\nconst initialState = {\r\n    genre: \"\",\r\n    genreCount: \"\",\r\n    length: \"\",\r\n    lengthCount: \"\",\r\n    screenwriter: {},\r\n    screenwriterList: []\r\n};\r\n\r\nexport function additionalTasksReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GENRE_COUNT:\r\n            return {\r\n                ...state,\r\n                genreCount: action.payload\r\n            };\r\n        case SET_GENRE:\r\n            return {\r\n                ...state,\r\n                genre: action.payload\r\n            };\r\n        case SET_SCREENWRITER_LIST:\r\n            return {\r\n                ...state,\r\n                screenwriterList: action.payload\r\n            };\r\n        case SET_LENGTH:\r\n            return {\r\n                ...state,\r\n                length: action.payload\r\n            };\r\n        case SET_LENGTH_COUNT:\r\n            return {\r\n                ...state,\r\n                lengthCount: action.payload\r\n            };\r\n        case SET_SCREENWRITER:\r\n            return {\r\n                ...state,\r\n                screenwriter: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux'\r\nimport {movieReducer} from './movieReducer.js'\r\nimport {reducer as notifications} from 'react-notification-system-redux';\r\nimport {pageReducer} from \"./pageReducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport {coordinatesReducer} from \"./coordinatesReducer\";\r\nimport {locationReducer} from \"./locationReducer\";\r\nimport {personReducer} from \"./personReducer\";\r\nimport {additionalTasksReducer} from \"./additionalTasksReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: movieReducer,\r\n    notifications: notifications,\r\n    page: pageReducer,\r\n    coordinates: coordinatesReducer,\r\n    location: locationReducer,\r\n    person: personReducer,\r\n    additional: additionalTasksReducer,\r\n    form: formReducer,\r\n});","import App from './components/App'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {rootReducer} from './reducer/rootReducer.js'\nimport {Provider} from \"react-redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport {applyMiddleware, createStore} from 'redux';\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk, logger)),\n);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}